---
- hosts: localhost
  connection: local
  tasks:
  - name: Create new self signed certificate for l4lb services
    shell: dcos security cluster ca newcert --cn *.marathon.l4lb.thisdcos.directory --name-c US --name-st CA --name-o "Mesosphere, Inc." --name-l "San Francisco" --key-algo rsa --key-size 2048 --host *.marathon.{{ instance_domain }} -j > ../output/cert/mesoscert.json

  - name: Convert JSON blob into a pem file - certificate
    shell: cat ../output/cert/mesoscert.json | jq -r .certificate > ../output/cert/mesoscert.pem

  - name: Convert JSON blob into a pem file - certificate_request
    shell: cat ../output/cert/mesoscert.json | jq -r .certificate_request >> ../output/cert/mesoscert.pem

  - name: Convert JSON blob into a pem file - private_key
    shell: cat ../output/cert/mesoscert.json | jq -r .private_key >> ../output/cert/mesoscert.pem

  - name: Convert JSON blob into a pem file - private_key
    command: openssl pkcs12 -export -password pass:changeit -out ../output/cert/mesoscert.pkcs12 -in ../output/cert/mesoscert.pem

  - name: Import PKCS12 into a Java keystore
    command: keytool -importkeystore -deststorepass changeit -destkeypass changeit -destkeystore ../output/cert/{{ kafka_cluster_identifier }}-kafka-keystore.jks -srckeystore ../output/cert/mesoscert.pkcs12 -srcstoretype PKCS12 -srcstorepass changeit

  - name: Base64 encode keystore
    shell: cat ../output/cert/{{ kafka_cluster_identifier }}-kafka-keystore.jks | base64 | tr -d '\n' > ../output/cert/{{ kafka_cluster_identifier }}-kafka-keystore.jks.base64

  - name: Add the Keystore as a secret
    command: dcos security secrets create -f ../output/cert/{{ kafka_cluster_identifier }}-kafka-keystore.jks.base64 {{ service_group }}/{{ kafka_cluster_identifier }}-kafka/__dcos_base64__mykeystore