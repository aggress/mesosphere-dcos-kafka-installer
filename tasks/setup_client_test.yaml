---
- hosts: localhost
  connection: local
  tasks:
  - name: Get the DC/OS master from dcos node
    shell: dcos cluster list --attached | tail -1 |  awk {'print $4'} | sed 's~http[s]*://~~g'
    register: dcos_master

  - name: Delete any existing truststore.jks as keytool will error, otherwise ignore
    file:
      path: ../output/cert/truststore.jks
      state: absent
    ignore_errors: true

  - name: Delete any existing /tmp/kafkatest/{{ kafka_cluster_identifier }} directory on the master, otherwise ignore
    shell: ssh "{{ ssh_user }}"@"{{ dcos_master.stdout }}" rm -rf /tmp/kafkatest/{{ kafka_cluster_identifier }}
    ignore_errors: true

  - name: Build the client-jaas-testing.conf in the output directory
    template: src=../templates/client-jaas/client-jaas-testing.conf.j2 dest=../output/other/{{ kafka_cluster_identifier }}-client-jaas-testing.conf

  - name: Get Broker-TLS endpoint for client testing
    shell: dcos beta-confluent-kafka --name={{ service_group }}/{{ kafka_cluster_identifier }}-kafka/{{ kafka_cluster_identifier }}-beta-confluent-kafka endpoint broker-tls | jq -r .dns[0] | paste -sd, -
    register: broker_tls_endpoint
    failed_when: "'error' in broker_tls_endpoint.stderr"

  - name: Get Zookeeper endpoint for client testing
    shell: dcos beta-confluent-kafka-zookeeper --name={{ service_group }}/{{ kafka_cluster_identifier }}-kafka/{{ kafka_cluster_identifier }}-beta-confluent-kafka-zookeeper endpoint clientport | jq -r .dns[0] | paste -sd, -
    register: zookeeper_endpoint
    failed_when: "'error' in zookeeper_endpoint.stderr"

  - name: Build the Docker Kafka client testing shell script
    template: src=../templates/other/docker-kafka-client.sh.j2 dest=../output/other/{{ kafka_cluster_identifier }}-docker-kafka-client.sh

  - name: Build the Producer test shell script
    template: src=../templates/other/kafka-console-producer-test.sh.j2 dest=../output/other/{{ kafka_cluster_identifier }}-kafka-console-producer-test.sh

  - name: Build the Consumer test shell script
    template: src=../templates/other/kafka-console-consumer-test.sh.j2 dest=../output/other/{{ kafka_cluster_identifier }}-kafka-console-consumer-test.sh

  - name: Build the Topic test shell script
    template: src=../templates/other/kafka-topic-test.sh.j2 dest=../output/other/{{ kafka_cluster_identifier }}-kafka-topic-test.sh

  - name: Create a temporary directory for the Kafka client configs
    shell: ssh "{{ ssh_user }}"@"{{ dcos_master.stdout }}" mkdir /tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the Docker Kafka client testing shell script to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-docker-kafka-client.sh "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the Producer test shell script to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-kafka-console-producer-test.sh "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the Consumer test shell script to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-kafka-console-consumer-test.sh "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the Topic test shell script to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-kafka-topic-test.sh "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the client.keytab to the master
    command: scp ../output/keytabs/{{ kafka_cluster_identifier}}-clients.keytab "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the client-jaas-testing.conf to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-client-jaas-testing.conf "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the client.properties to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-client.properties "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the krb5.conf to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-krb5.conf "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: Get the ca bundle back
    shell: curl -k -v $(dcos config show core.dcos_url)/ca/dcos-ca.crt -o ../output/cert/ca-bundle.crt

  - name: Create a self signed certificate
    shell: dcos security cluster ca newcert --cn test --host test -j > ../output/cert/selfsigned.json

  - name: Export certificate from JSON blob
    shell: cat ../output/cert/selfsigned.json | jq -r .certificate > ../output/cert/pub.crt

  - name: Export priv key from JSON blob
    shell: cat ../output/cert/selfsigned.json | jq -r .private_key > ../output/cert/priv.key

  - name: Convert the pub/priv keypair to a PKCS12 key
    shell: openssl pkcs12 -export -password pass:export -in ../output/cert/pub.crt -inkey ../output/cert/priv.key -out ../output/cert/keypair.p12 -name keypair -CAfile ../output/cert/ca-bundle.crt -caname root

  - name: Create the keystore
    shell: keytool -importkeystore -noprompt -deststorepass changeit -destkeypass changeit -destkeystore ../output/cert/keystore.jks -srckeystore ../output/cert/keypair.p12 -srcstoretype PKCS12 -srcstorepass export -alias keypair

  - name: Create the truststore
    shell: keytool -import -noprompt -trustcacerts -alias root -file ../output/cert/ca-bundle.crt -storepass changeit -keystore ../output/cert/truststore.jks

  - name: SCP the ca-bundle to the master
    command: scp ../output/cert/ca-bundle.crt "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the keystore to the master
    command: scp ../output/cert/keystore.jks "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the truststore to the master
    command: scp ../output/cert/truststore.jks "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: Build the REST Proxy client test script in the output directory
    template: src=../templates/other/rest-proxy-testing.sh.j2 dest=../output/other/{{ kafka_cluster_identifier }}-rest-proxy-testing.sh

  - name: SCP the REST Proxy client test script to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-rest-proxy-testing.sh "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: Build the Schema Registry client test script in the output directory
    template: src=../templates/other/schema-registry-testing.sh.j2 dest=../output/other/{{ kafka_cluster_identifier }}-schema-registry-testing.sh

  - name: SCP the Schema Registry client test script to the master
    command: scp ../output/other/{{ kafka_cluster_identifier }}-schema-registry-testing.sh "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: Get the patched Zookeeper JAR for https://issues.apache.org/jira/browse/ZOOKEEPER-2184
    get_url:
      url: http://downloads.mesosphere.com/kafka/assets/zookeeper-3.4.10.1.jar
      dest: ../templates/other/zookeeper-3.4.10.1.jar

  - name: SCP the patched Zookeepeer JAR to the master
    command: scp ../templates/other/zookeeper-3.4.10.1.jar "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: SCP the Zookeeper patch script to the master
    command: scp ../templates/other/patch_zookeeper.sh "{{ ssh_user }}"@"{{ dcos_master.stdout }}":/tmp/kafkatest/{{ kafka_cluster_identifier }}

  - name: Set chmod +x on all the scripts
    shell: ssh "{{ ssh_user }}"@"{{ dcos_master.stdout }}" chmod +x /tmp/kafkatest/{{ kafka_cluster_identifier }}/*.sh

